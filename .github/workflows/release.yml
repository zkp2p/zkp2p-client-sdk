name: Publish Package

on:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
          cache-dependency-path: packages/client-sdk/package-lock.json

      - name: Generate root lockfile for provenance
        run: |
          npm install --package-lock-only

      - name: Install dependencies (package workspace)
        run: npm ci --prefix packages/client-sdk

      - name: Build
        run: npm run build

      - name: Verify lockfile at repo root
        run: |
          echo "Listing repo root to verify lockfile presence"
          ls -la
          test -f package-lock.json || (echo "ERROR: package-lock.json missing at repo root" && exit 1)

      - name: Publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          set -euo pipefail
          TAG="${GITHUB_REF##*/}"
          echo "Publishing for tag: $TAG"

          if [[ ! "$TAG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-[0-9A-Za-z.-]+)?$ ]]; then
            echo "ERROR: Tag must be semantic version prefixed with 'v', e.g. v2.2.2 or v2.2.2-dev.0"
            exit 1
          fi

          VERSION_FROM_TAG="${TAG#v}"
          echo "Setting workspace version from tag: ${VERSION_FROM_TAG}"
          npm --prefix packages/client-sdk pkg set version="${VERSION_FROM_TAG}"

          # Read back name/version from workspace after enforcing tag version
          PKG_NAME=$(node -p "require('./packages/client-sdk/package.json').name")
          PKG_VERSION=$(node -p "require('./packages/client-sdk/package.json').version")
          echo "Package resolved from workspace: ${PKG_NAME}@${PKG_VERSION}"

          # Sync root manifest to workspace manifest to ensure correct name/version during publish
          npm pkg set name="$PKG_NAME"
          npm pkg set version="$PKG_VERSION"

          # Dev prerelease flow (e.g., tags like v2.2.2-dev.0)
          if [[ "$TAG" == *"-dev."* ]]; then
            echo "Detected dev pre-release tag. Publishing under temporary UNscoped name zkp2p-client-sdk-dev with dist-tag 'dev' (no provenance)"
            npm pkg set name=zkp2p-client-sdk-dev
            npm publish --access public --tag dev --no-provenance
            exit 0
          fi

          # Validate that stable tag matches workspace version (e.g., v2.2.2)
          EXPECTED_TAG="v${PKG_VERSION}"
          if [[ "$TAG" != "$EXPECTED_TAG" ]]; then
            echo "ERROR: Tag ($TAG) does not match workspace version ($PKG_VERSION)."
            echo "Push tag $EXPECTED_TAG or update packages/client-sdk/package.json."
            exit 1
          fi

          # If this version already exists on npm, skip publishing and ensure 'latest' points to it
          if npm view "${PKG_NAME}@${PKG_VERSION}" version >/dev/null 2>&1; then
            echo "Version ${PKG_NAME}@${PKG_VERSION} already exists on npm. Skipping publish."
            echo "Promoting existing version to 'latest' dist-tag (idempotent)."
            npm dist-tag add "${PKG_NAME}@${PKG_VERSION}" latest || true
            exit 0
          fi

          # Stable publish with provenance
          npm publish --access public --provenance

      - name: Create GitHub Release
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          prerelease: ${{ contains(github.ref_name, '-dev.') }}
          generate_release_notes: true
