# Generated by scripts/merge-schema.js — do not edit directly.
# Domain types

type Deposit {
  id: ID! # escrowAddress_depositId
  chainId: Int!
  escrowAddress: String!

  # Static Deposit details
  depositId: BigInt!
  depositor: String!
  token: String!

  # Deposit details (can be updated)
  intentAmountMin: BigInt!
  intentAmountMax: BigInt!
  acceptingIntents: Boolean!
  status: String! # ACTIVE | CLOSED
  # Deposit amounts used for quote calculations
  # Notes/identities:
  # - balance = remainingDeposits + outstandingIntentAmount
  # - grossDeposited (all-time) = remainingDeposits + outstandingIntentAmount + totalAmountTaken + totalWithdrawn
  remainingDeposits: BigInt! # Total USDC immediately available to be taken / withdrawn
  outstandingIntentAmount: BigInt! # Total USDC locked in pending intents
  totalAmountTaken: BigInt! # Total USDC taken by intents (incl. manual release)
  totalWithdrawn: BigInt! # Total USDC withdrawn via DepositWithdrawn events
  # Intent counters
  totalIntents: Int!
  signaledIntents: Int!
  fulfilledIntents: Int!
  prunedIntents: Int!

  # Quality signal (basis points 0–10000; new deposits start at 10000)
  successRateBps: Int!

  # Metadata
  blockNumber: BigInt!
  timestamp: BigInt!
  txHash: String!
  updatedAt: BigInt!
}

type DepositPaymentMethod {
  id: ID! # escrowAddress_depositId_paymentMethodHash
  chainId: Int!

  # Corresponding Deposit details
  depositId: String! # escrowAddress_depositId (foreign key)
  depositIdOnContract: BigInt!

  # Payment method details
  paymentMethodHash: String!
  verifierAddress: String!
  intentGatingService: String!
  payeeDetailsHash: String!
  active: Boolean!
}

type MethodCurrency {
  id: ID! # escrowAddress_depositId_paymentMethodHash_currencyCode
  chainId: Int!

  # Corresponding Deposit details
  depositId: String! # escrowAddress_depositId (foreign key)
  depositIdOnContract: BigInt!

  # Payment method details
  paymentMethodHash: String!
  currencyCode: String!
  minConversionRate: BigInt! # Currently contract emits this field as conversionRate; todo: update it on contract
}

type Intent {
  id: ID! # chainId_intentHash
  intentHash: String!
  orchestratorAddress: String!

  # Corresponding Deposit details
  depositId: String! # escrowAddress_depositId (foreign key)
  # Verifier details
  verifier: String!
  paymentMethodHash: String # Association to payment method
  # Recipient details
  owner: String!
  toAddress: String!

  # Payment details
  amount: BigInt!
  fiatCurrency: String!
  conversionRate: BigInt!
  status: String! # SIGNALED | FULFILLED | PRUNED | MANUALLY_RELEASED
  # Tx hashes and timestamps
  signalTxHash: String!
  signalTimestamp: BigInt!
  fulfillTxHash: String
  fulfillTimestamp: BigInt
  pruneTxHash: String
  pruneTimestamp: BigInt
  expiryTime: BigInt!
  updatedAt: BigInt!
}

# Escrow V2 event entity types (only those present in sepolia_config.yaml)

type Escrow_V2_DepositClosed {
  id: ID!
  depositId: BigInt!
  depositor: String!
}

type Escrow_V2_DepositConversionRateUpdated {
  id: ID!
  depositId: BigInt!
  verifier: String!
  currency: String!
  newConversionRate: BigInt!
}

type Escrow_V2_DepositCurrencyAdded {
  id: ID!
  depositId: BigInt!
  verifier: String!
  currency: String!
  conversionRate: BigInt!
}

type Escrow_V2_DepositReceived {
  id: ID!
  depositId: BigInt!
  depositor: String!
  token: String!
  amount: BigInt!
  intentAmountRange_0: BigInt!
  intentAmountRange_1: BigInt!
}

type Escrow_V2_DepositVerifierAdded {
  id: ID!
  depositId: BigInt!
  verifier: String!
  payeeDetailsHash: String!
  intentGatingService: String!
}

type Escrow_V2_DepositWithdrawn {
  id: ID!
  depositId: BigInt!
  depositor: String!
  amount: BigInt!
}

type Escrow_V2_IntentFulfilled {
  id: ID!
  intentHash: String!
  depositId: BigInt!
  verifier: String!
  owner: String!
  to: String!
  amount: BigInt!
  sustainabilityFee: BigInt!
  verifierFee: BigInt!
}

type Escrow_V2_IntentPruned {
  id: ID!
  intentHash: String!
  depositId: BigInt!
}

type Escrow_V2_IntentSignaled {
  id: ID!
  intentHash: String!
  depositId: BigInt!
  verifier: String!
  owner: String!
  to: String!
  amount: BigInt!
  fiatCurrency: String!
  conversionRate: BigInt!
  timestamp: BigInt!
}

# Escrow V2.1 + Orchestrator V2.1 event entity types

type Escrow_V21_DepositPaymentMethodAdded {
  id: ID!
  depositId: BigInt!
  paymentMethod: String!
  payeeDetailsHash: String!
  intentGatingService: String!
}

type Escrow_V21_DepositPaymentMethodActiveUpdated {
  id: ID!
  depositId: BigInt!
  paymentMethod: String!
  isActive: Boolean!
}

type Escrow_V21_DepositCurrencyAdded {
  id: ID!
  depositId: BigInt!
  paymentMethod: String!
  currency: String!
  minConversionRate: BigInt! # Currently contract emits this field as conversionRate; todo: update it on contract
}

type Escrow_V21_DepositConversionRateUpdated {
  id: ID!
  depositId: BigInt!
  paymentMethod: String!
  currency: String!
  newConversionRate: BigInt!
}

type Escrow_V21_DepositIntentAmountRangeUpdated {
  id: ID!
  depositId: BigInt!
  intentAmountRange_0: BigInt!
  intentAmountRange_1: BigInt!
}

type Escrow_V21_DepositMinConversionRateUpdated {
  id: ID!
  depositId: BigInt!
  paymentMethod: String!
  currency: String!
  newMinConversionRate: BigInt!
}

type Escrow_V21_DepositAcceptingIntentsUpdated {
  id: ID!
  depositId: BigInt!
  acceptingIntents: Boolean!
}

type Escrow_V21_DepositReceived {
  id: ID!
  depositId: BigInt!
  depositor: String!
  token: String!
  amount: BigInt!
  intentAmountRange_0: BigInt!
  intentAmountRange_1: BigInt!
  delegate: String!
  intentGuardian: String!
}

type Escrow_V21_DepositFundsAdded {
  id: ID!
  depositId: BigInt!
  depositor: String!
  amount: BigInt!
}

type Escrow_V21_DepositWithdrawn {
  id: ID!
  depositId: BigInt!
  depositor: String!
  amount: BigInt!
}

type Escrow_V21_DepositClosed {
  id: ID!
  depositId: BigInt!
  depositor: String!
}

type Escrow_V21_FundsLocked {
  id: ID!
  depositId: BigInt!
  intentHash: String!
  amount: BigInt!
  expiryTime: BigInt!
}

type Escrow_V21_FundsUnlocked {
  id: ID!
  depositId: BigInt!
  intentHash: String!
  amount: BigInt!
}

type Escrow_V21_FundsUnlockedAndTransferred {
  id: ID!
  depositId: BigInt!
  intentHash: String!
  unlockedAmount: BigInt!
  transferredAmount: BigInt!
  to: String!
}

type Escrow_V21_IntentExpiryExtended {
  id: ID!
  depositId: BigInt!
  intentHash: String!
  newExpiryTime: BigInt!
}

# Orchestrator V2.1 events

type Orchestrator_V21_IntentSignaled {
  id: ID!
  intentHash: String!
  escrow: String!
  depositId: BigInt!
  paymentMethod: String!
  owner: String!
  to: String!
  amount: BigInt!
  fiatCurrency: String!
  conversionRate: BigInt!
  timestamp: BigInt!
}

type Orchestrator_V21_IntentPruned {
  id: ID!
  intentHash: String!
}

type Orchestrator_V21_IntentFulfilled {
  id: ID!
  intentHash: String!
  fundsTransferredTo: String!
  amount: BigInt!
  isManualRelease: Boolean!
}

# Unified Verifier V2.1 event entity types

type UnifiedVerifier_V21_PaymentVerified {
  id: ID!
  intentHash: String!
  method: String!
  currency: String!
  amount: BigInt!
  timestamp: BigInt!
  paymentId: String!
  payeeId: String!
}
